#ifndef __ePaperSettings__
#define __ePaperSettings__
#include "ePaperSettings_Crystalfontz.h"
#include "ePaperSettings_GoodDisplay.h"


// 
// This is the command sequence for setting the image for most three-color
// displays
//
const uint8_t setImage_CMD_3color[] PROGMEM = {
	// wait until ready
//	0xFF,
	
	// set black image command
	0,	0x10,
	
	// send black data
	0xFD,
	
	// set color image command
	0,	0x13,
	
	// send color data
	0xFC,
	
	// display refresh command
	0,	0x12,
	
	// wait until ready
	0xFE, 5,
	0xFF,
	
	//VCOM AND DATA INTERVAL SETTING
	0, 0x50,
	1, 0xF7,

	// power off
	0,	0x02,
	0xFF,
	
	// Deep Sleep
	0,	0x07,
	1,	0xA5,
};

const uint16_t setImage_CMD_3color_size = 15;


//
// This is the command sequence for most 4-level gray scale displays
//

const uint8_t setImage_CMD_4gray[] PROGMEM = {
	// set black image command
	0,	0x10,
	
	// send black data
	0xFD,
	
	// set color image command
	0,	0x13,
	
	// send color data
	0xFC,
	
	// set LUT information
	
	0, 0x20,		//vcom
	42,	0x00  ,0x0A ,0x00 ,0x00 ,0x00 ,0x01,
		0x60  ,0x14 ,0x14 ,0x00 ,0x00 ,0x01,
		0x00  ,0x14 ,0x00 ,0x00 ,0x00 ,0x01,
		0x00  ,0x13 ,0x0A ,0x01 ,0x00 ,0x01,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
	
	0, 0x21,    // red not use
	42,	0x40  ,0x0A ,0x00 ,0x00 ,0x00 ,0x01,
		0x90  ,0x14 ,0x14 ,0x00 ,0x00 ,0x01,
		0x10  ,0x14 ,0x0A ,0x00 ,0x00 ,0x01,
		0xA0  ,0x13 ,0x01 ,0x00 ,0x00 ,0x01,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
	
	0, 0x22,		// bw r
	42,	0x40  ,0x0A ,0x00 ,0x00 ,0x00 ,0x01,
		0x90  ,0x14 ,0x14 ,0x00 ,0x00 ,0x01,
		0x00  ,0x14 ,0x0A ,0x00 ,0x00 ,0x01,
		0x99  ,0x0C ,0x01 ,0x03 ,0x04 ,0x01,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,

	0, 0x23,		// wb w
	42,	0x40  ,0x0A ,0x00 ,0x00 ,0x00 ,0x01,
		0x90  ,0x14 ,0x14 ,0x00 ,0x00 ,0x01,
		0x00  ,0x14 ,0x0A ,0x00 ,0x00 ,0x01,
		0x99  ,0x0B ,0x04 ,0x04 ,0x01 ,0x01,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,

	0, 0x24,		// bb b
	42,	0x80  ,0x0A ,0x00 ,0x00 ,0x00 ,0x01,
		0x90  ,0x14 ,0x14 ,0x00 ,0x00 ,0x01,
		0x20  ,0x14 ,0x0A ,0x00 ,0x00 ,0x01,
		0x50  ,0x13 ,0x01 ,0x00 ,0x00 ,0x01,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,

	0, 0x25,
	42,	0x40  ,0x0A ,0x00 ,0x00 ,0x00 ,0x01,
		0x90  ,0x14 ,0x14 ,0x00 ,0x00 ,0x01,
		0x10  ,0x14 ,0x0A ,0x00 ,0x00 ,0x01,
		0xA0  ,0x13 ,0x01 ,0x00 ,0x00 ,0x01,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,
		0x00  ,0x00 ,0x00 ,0x00 ,0x00 ,0x00,

	// display refresh command
	0,	0x12,
	
	// wait until ready
	0xFE, 5,
	0xFF,
	
	//VCOM AND DATA INTERVAL SETTING
	0, 0x50,
	1, 0xF7,
	
	//power off
	0, 0x02,
	0xff,
	
	//deep sleep
	0, 0x07,
	1, 0xA5,
};

const uint16_t setImage_CMD_4gray_size = 292;

#endif // __ePaperSettings__
